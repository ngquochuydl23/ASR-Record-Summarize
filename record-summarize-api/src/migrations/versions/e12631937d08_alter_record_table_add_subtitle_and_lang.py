"""Alter record-table add subtitle and lang

Revision ID: e12631937d08
Revises: fbf866eb92e4
Create Date: 2025-09-12 17:05:12.866154

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e12631937d08'
down_revision: Union[str, None] = 'fbf866eb92e4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

recordlang = postgresql.ENUM('EN', 'VIE', name='recordlang')

def upgrade() -> None:
    recordlang.create(op.get_bind(), checkfirst=True)
    op.drop_index(op.f('ix_subtitles_is_deleted'), table_name='subtitles')
    op.drop_table('subtitles')
    op.add_column('records', sa.Column('subtitle_url', sa.String(), nullable=True))
    op.add_column('records', sa.Column('lang', recordlang, nullable=True))

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('records', 'lang')
    op.drop_column('records', 'subtitle_url')
    op.create_table('subtitles',
    sa.Column('filename', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('mime', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lang', postgresql.ENUM('EN', 'VIE', name='langsubtitleenum'), autoincrement=False, nullable=True),
    sa.Column('record_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['record_id'], ['records.id'], name=op.f('subtitles_record_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('subtitles_pkey'))
    )
    op.create_index(op.f('ix_subtitles_is_deleted'), 'subtitles', ['is_deleted'], unique=False)
    recordlang.drop(op.get_bind(), checkfirst=True)